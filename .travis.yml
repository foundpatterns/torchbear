language: rust
rust: stable
sudo: required
env:
  global:
  - PROJECT: torchbear
matrix:
  include:
    - os: linux
      rust: stable
      env:
      - ARCH=x86_64
      - PLATFORM=linux
      - CHANNEL=stable
      services: docker
      script: echo "cargo test temporarily disabled"
      before_deploy:
      - docker build -t build-${PROJECT}-image .
      - docker run -it --name build-${PROJECT} build-${PROJECT}-image
      - docker cp build-${PROJECT}:/home/rust/src/target/x86_64-unknown-linux-musl/release/${PROJECT} ${PROJECT}
      - docker rm build-${PROJECT}
      - docker rmi build-${PROJECT}-image
      - zip ${PROJECT}-${TRAVIS_TAG}-${ARCH}-${PLATFORM}-${CHANNEL}.zip ${PROJECT}
    - os: linux
      rust: nightly
      env:
      - ARCH=x86_64
      - PLATFORM=linux
      - CHANNEL=nightly
      services: docker
      script: echo "cargo test temporarily disabled"
      before_deploy:
      - docker build -f Dockerfile.nightly -t build-${PROJECT}-image .
      - docker run -it --name build-${PROJECT} build-${PROJECT}-image
      - docker cp build-${PROJECT}:/home/rust/src/target/x86_64-unknown-linux-musl/release/${PROJECT} ${PROJECT}
      - docker rm build-${PROJECT}
      - docker rmi build-${PROJECT}-image
      - zip ${PROJECT}-${TRAVIS_TAG}-${ARCH}-${PLATFORM}-${CHANNEL}.zip ${PROJECT}
    - os: linux
      env:
      - ARCH=arm64
      - PLATFORM=android
      - CHANNEL=stable
      script: echo "cargo test temporarily disabled"
      before_deploy:
      - export PATH="$HOME/.cargo/bin:$PATH"
      - rustup target add aarch64-linux-android
      - wget -q https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip
      - unzip -qq android-ndk-r18b-linux-x86_64.zip
      - export NDK_HOME="$PWD/android-ndk-r18b"
      - mkdir NDK
      - ${NDK_HOME}/build/tools/make-standalone-toolchain.sh --arch=arm64 --install-dir=NDK/aarch64 --platform=android-22
      - export PATH="$PATH:$PWD/NDK/aarch64/bin"
      - cargo build --target="aarch64-linux-android" --release
      - zip -j ${PROJECT}-${TRAVIS_TAG}-${ARCH}-${PLATFORM}-${CHANNEL}.zip target/aarch64-linux-android/release/${PROJECT}
    - os: linux
      env:
      - ARCH=arm32
      - PLATFORM=android
      - CHANNEL=stable
      script: echo "cargo test temporarily disabled"
      before_deploy:
      - export PATH="$HOME/.cargo/bin:$PATH"
      - rustup target add arm-linux-androideabi
      - wget -q https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip
      - unzip -qq android-ndk-r18b-linux-x86_64.zip
      - export NDK_HOME="$PWD/android-ndk-r18b"
      - mkdir NDK
      - ${NDK_HOME}/build/tools/make-standalone-toolchain.sh --arch=arm --install-dir=NDK/arm --platform=android-22
      - export PATH="$PATH:$PWD/NDK/arm/bin" 	
      - cargo build --target="arm-linux-androideabi" --release
      - zip -j ${PROJECT}-${TRAVIS_TAG}-${ARCH}-${PLATFORM}-${CHANNEL}.zip target/arm-linux-androideabi/release/${PROJECT}
    # TODO: Implement windows jobs into travis. 
    # TODO: Implement 32bit as musl builder doesnt support it. Maybe just have it compile normally since it will be running against trusty which
    #       should be compatible with newer glibc
    # - os: linux
    #   rust: stable
    #   sudo: required
    #   env: ARCH=i686
deploy:
  provider: releases
api_key:
    secure: W3ShbjNyAdYqTopB46k4cTKKK9Sog1Xos7EaHFGMexARFb/ujJM+leIiKmz19LTM25hYhb8aMCrbU/dBt+ATG2kZcnEysEVX2pCtQp0YfOq3QKyCF6CmxGIm7ZsilhOuudWc1e6ahij2MR9mAdzMG1jeezGWsymLFdVyCpCv1+ysy8vXUP7RzV/Ly+BplzadHwRFSxwb9V2lzmmX9zOeHo2a2WjzxsqZC9sawAQhY3xZz7jDN98jbRmUi0K7xRQMQEqN0HOA5qN4sl3jBHYFX8gvBn33CCyf8908CnuFCwZit4kiF+drc6D0XRnBU7ynrVKV0lQjcvH4m2hzKH5UwWaRMViHj9/6Qrt+h4x4em4HEjNZY6esT0iw0dKdeLuT0EIa+j5uw56R5uK2ozssGgP9brNtnsRxvbllJHmg5D/iYUPyelKyTep0uVXFol7+SaM3UVd0+ag3bvpbNwoCqz+YLQ8NwW7nftmCikCTXODhkw5Rlec/KrjwmIWG9VVZNRH2MI0rG+Jjnm/BKeTyWDi2aJ77gUTMdDv1SmxfwjD80jHZJPYhXqTUjbb76Y20hPRNfqJdzuvGVREzmOoVKcdDzwmc9HopGqGWCNcPUFsj7DYWpx7VZyN8vtakJEXvMP49uzfccnSSaKRMh+fkDD9OcIaNeFEgglgzSYSXSPE=
  file_glob: true
  file: 
    - "${PROJECT}-${TRAVIS_TAG}-${ARCH}-${PLATFORM}-${CHANNEL}.*"
    - signature.asc
  skip_cleanup: true
  on:
    repo: sh-zam/torchbear
    tags: true
branches:
  only:
  - /^\d+\.\d+\.\d+.*$/
notifications:
  email:
    on_success: never  

before_install:
- openssl aes-256-cbc -K $encrypted_d833950d04bb_key -iv $encrypted_d833950d04bb_iv -in keys.gpg.enc -out keys.gpg -d
